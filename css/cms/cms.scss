// compileOnSave: false

/*
 * This file is part of the QuidPHP package.
 * Website: https://quidphp.com
 * License: https://github.com/quidphp/lemur/blob/master/LICENSE
 */

// style
// stylesheet containing the root styling rules as well as common classes for the CMS

/* INIT */
@include reset();
@include default();
@include jqueryUi();

/* HTML */
:root {
    @include Document('.route-wrap');
}
body {
    font-size: 1.4rem;
    font-weight: 300;
    line-height: 1.5;
    @include scrollbar();
}

/* TITRE */
h1 {
    font-size: 2.2rem;
    font-weight: 600;
}
h2 {
    font-size: 1.8rem;
    font-weight: 600;
}
h3 {
    font-size: 1.4rem;
    font-weight: 600;
}

/* FORM */
input[type='text'],
input[type='password'],
input[type='email'],
textarea {
    @include inputTextBase();
}
input[type='radio'],
input[type='checkbox'] {
    @include wh(1px);
    -webkit-appearance: none;
}
input[type='radio'] + label,
input[type='checkbox'] + label {
    padding-left: 22px;
    background-size: 14px 14px;
    background-position: 0% 50%;
}
label[for]:hover {
    color: $darkGray;
}
button[type='submit'] {
    @include button();
}
button[type='button'] {
    line-height: 1.5;
}
body a.with-icon,
body button.with-icon,
body input[type='submit'].with-icon,
body .trigger.with-icon {
    @include button();
    @include iconLeft();
}

/* ICON */
body .icon-solo {
    @include iconSolo();

    &.icon-center {
        @include abs(50%, null, null, 50%);
        margin-left: -8px;
        margin-top: -8px;
    }
}

/* OPACITY */
body .icon-solo.search,
html body .icon-solo.move {
    &:hover,
    &[data-triggered='1'] {
        opacity: 0.6;
    }
}

/* LOADING */
body .loading-icon,
body [data-status='loading'] .popup,
body [data-status='loading'].popup,
.load-more[data-status='loading'],
.block-body[data-status='loading'],
.modal[data-status='loading'] .inner,
td[data-quick-edit='1'][data-status='loading'] > .cell-inner > a.quick-edit {
    background-size: 16px 16px;
}

/* ERROR */
.ajax-parse-error {
    text-align: center;

    h1,
    h2 {
        margin-bottom: 5px;
    }

    h3 {
        margin-bottom: 10px;
    }

    .back {
        @include wysiwyg();
    }
}

/* COMPONENT */
body {
    @include clickOpen();
}
body > .background {
    @include Background();
}
body > .modal {
    @include Modal();
}
[data-absolute-placeholder] {
    @include AbsolutePlaceholder();
}
[data-anchor-corner] {
    @include AnchorCorner('.popup');
}
.fakeselect {
    @include fakeSelect();
}
.popup-trigger {
    @include popupTrigger();
}
.general-component {
    @include generalComponent();
}
.specific-component {
    @include specificComponent();
}

// primary
[data-cell='primary'] .general-component {
    @include componentPrimaryGeneral();
}

// date
[data-group='date'] .specific-component {
    @include componentDateSpecific();
}

// relation
[data-group='relation'][data-tag='search'] .specific-component {
    @include componentEnumSetSpecific();
}
[data-group='relation'][data-sortable='1'] .specific-component {
    @include componentRelationSortableSpecific();
}
[data-group='relation'][data-tag='select'] .specific-component {
    @include componentSelectSpecific();
}
[data-group='relation'] .general-component {
    @include componentRelationGeneral();
}
[data-group='relation'][data-relation-table='media'] .general-component {
    @include componentRelationMediaGeneral();
}

// files
[data-group='media'] .specific-component {
    @include componentFilesSpecific();
}
[data-group='media'] .general-component {
    @include componentFilesGeneral();
}

// addRemove
[data-tag='add-remove'] .specific-component {
    @include componentAddRemoveSpecific();
}

// jsonArrayRelation
[data-col='jsonArrayRelation'] .specific-component {
    @include componentJsonArrayRelationSpecific();
}

// tableRelation
[data-table-relation='1'] .specific-component {
    @include componentTextareaExtraSpecific();
}

/* userPassword */
[data-col='userPassword'] .specific-component {
    @include componentUserPasswordSpecific();
}

// video
[data-group='video'] .specific-component {
    @include componentVideoSpecific();
}

// tinymce
[data-group='tinymce'] .specific-component {
    @include componentTinymceSpecific();
}
