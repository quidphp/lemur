/*
 * This file is part of the QuidPHP package <https://quidphp.com>
 * Author: Pierre-Philippe Emond <emondpph@gmail.com>
 * License: https://github.com/quidphp/lemur/blob/master/LICENSE
 */

// form
// stylesheet with various form-related mixins

// formBase
// défini quelques styles par défaut pour les inputs de formulaire
@mixin formBase() {
    @include inputsTextarea {
        display: block;
        width: 100%;
    }

    textarea {
        height: 100px;
    }
}

// labelBase
// applique une couleur au label et au hover du label s'il y a un for
@mixin labelBase($label: null, $labelHover: null) {
    @if ($label) {
        label {
            color: $label;
        }
    }

    @if ($labelHover) {
        label[for]:hover {
            color: $labelHover;
        }
    }

    .required label:before {
        content: '* ';
    }
}

// tableForm
// mixin avec les styles pour un formulaire dans une table, comme la page de connexion
@mixin tableForm($label: null, $labelHover: null, $description: null) {
    @include formBase();
    @include labelBase($label, $labelHover);

    .choice {
        padding: 5px 0;

        .choice-in {
            @include flex();
            @include inputChoice();
        }
    }

    .table {
        width: 100%;
        text-align: left;

        .table-cell {
            padding: 8px 0;

            &.label-cell {
                padding-right: 15px;
            }
        }

        .table-cell:first-child {
            width: 40%;
        }
    }

    @if ($description) {
        .description {
            font-size: 90%;
            color: $description;
        }
    }
}

// inputTextBase
// mixin avec des styles de base pour les inputs/textarea
@mixin inputTextBase() {
    @include inputTextEvents();
    padding: 8px 10px;
    border-radius: 5px;
    border: 1px solid $lightGray;
    height: auto;

    @include inputPlaceholder() {
        color: $darkGray;
    }
}

// inputTextEvents
// mixin avec des styles de base pour les events dans les inputs/textarea
@mixin inputTextEvents() {
    &[disabled] {
        background-color: $gray;
        cursor: no-drop;
    }

    &:not(:disabled) {
        &:hover,
        &:focus {
            background-color: $lightYellow;
        }

        &[data-validate='invalid'] {
            background-color: $red !important;
            color: $white !important;
            border: 1px solid $black;

            &::placeholder {
                color: $lightestGray;
            }

            &:-ms-input-placeholder {
                color: $lightestGray !important;
            }
        }
    }
}

// inputChoice
// style utilisé pour faire un choix parmis plusieurs input radio ou checkbox
@mixin inputChoice($paddingtb: 8px) {
    line-height: 1.1;

    input[type='radio'] + label,
    input[type='checkbox'] + label,
    input[type='radio']:checked + label,
    input[type='checkbox']:checked + label {
        @include transitions(box-shadow 0.3s, background-color 0.3s, border 0.3s);
        padding: $paddingtb 10px $paddingtb 30px;
        background-position: 10px 50%;
        cursor: pointer;
        background-color: $lighterGray;
        border: 1px solid $lightGray;
        border-radius: 5px;
        box-shadow: 2px 2px 6px -4px $lightGray;

        &:hover {
            color: $black;
            border: 1px solid $gray;
            background-color: $lightYellow;
            box-shadow: 2px 2px 6px -4px $gray;
        }

        &:active {
            border: 1px solid $darkColor;
        }
    }

    input[type='radio']:checked + label,
    input[type='checkbox']:checked + label {
        background-color: $white;
        box-shadow: 2px 2px 6px -4px $black;
    }
}

// button
// mixin pour le bouton
@mixin button() {
    @include inbl();
    @include transitions(background-color 0.3s, opacity 0.3s);
    cursor: pointer;
    line-height: inherit;
    padding: 5px 10px;
    border-radius: 6px;
    color: $white;
    background-color: $color;
    border: 1px solid $darkColor;

    &#{$defaultSelectedState},
    &:not(:disabled):hover {
        background-color: $darkColor;
        border: 1px solid $darkerColor;
        opacity: 1;
    }

    &#{$defaultClickState},
    &:not(:disabled):active {
        background-color: $darkerColor;
        border: 1px solid $black;
    }

    &:disabled {
        cursor: no-drop;
    }

    &.icon-solo,
    &.icon-solo:hover,
    &.icon-solo:active {
        background-color: transparent;
        border: transparent;
        padding: 0;
        border-radius: 0;
    }

    &.no-border,
    &.no-border:hover,
    &.no-border:active {
        border: 0;
        border-radius: 0;
    }
}
