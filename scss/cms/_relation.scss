// compileOnSave: false

/*
 * This file is part of the QuidPHP package.
 * Website: https://quidphp.com
 * License: https://github.com/quidphp/lemur/blob/master/LICENSE
 */

// relation
// stylesheet containing various CMS relation component mixins


// enumSet
// mixin avec des styles de base pour un champ enumSet (recherche dans relation)
@mixin enumSet() {
    .nothing {
        font-weight: bold;
        font-size: 90%;
    }

    .input {
        position: relative;
        margin: 5px 0;

        input[type='text'] {
            max-width: 300px !important;
            margin-right: 10px;
        }
    }
    
    .input .popup {
        @include enumSetPopup();
    }
}

// filterEnumSetPopup
// mixin avec des styles commons pour le popup d'un filtre et enum set
@mixin filterEnumSetPopup() {
    width: 350px;
    max-width: 350px;
    max-height: 300px;
    cursor: default;
    padding: 0;
    font-weight: 300;
    
    &:after {
        height: 0;
    }
    
    h3 {
        padding: 5px;
        text-align: center;
    }
    
    .results {
        display: block;
        
        ul {
            list-style-type: none;
            text-indent: 0;
            padding: 0;
            
            li {
                position: relative;
                padding: 0px;
                
                &.load-more {
                    @include loadMore();
                }
            }
        }
    }
}

// filterPopup
// mixin avec des styles pour le popup d'un filtre
@mixin filterPopup() {
    @include filterEnumSetPopup();
    
    .top {
        padding: 10px;
        display: block;

        input[type='text'] {
            width: 100%;
        }

        .spacing {
            height: 5px;
        }

        .order {
            text-align: center;
        }
    }

    .results ul {
        
        &.selected-list {
            border-bottom: 4px solid $lightGray;
        }

        li {
            
            &:first-child > .replace {
                border-top: 0;
            }

            &:hover > .replace {
                background-color: $lightYellow;
            }

            &.has-icon > .replace {
                padding-right: 30px;
            }
            
            &.has-icon .icon {
                @include iconSolo();
            }
            
            > a.replace {
                @include filterEnumSetElement();
                
                &.selected {
                    background-color: $lightYellow;
                }
            }
            
            a.icon {
                @include abs(50%, 5px);
                @include wh(16px, true, '', true);

                &:hover {
                    opacity: 0.5;
                }
            }
        }
    }
}

// enumSetPopup
// mixin avec des styles pour le popup d'un enum set
@mixin enumSetPopup() {
    @include filterEnumSetPopup();
    
    .order {
        text-align: center;
        padding: 5px 0;
    }
    
    .results ul li {
        
        &:first-child > .ele {
            border-top: 0;
        }

        &.already-in > .ele {
            background-color: $red !important;
            color: $white;
        }

        &.selected > .ele,
        &:hover > .ele {
            background-color: $lightYellow;
        }
        
        > .ele {
            @include filterEnumSetElement();
        }
    }
}

// filterEnumSetElement
// mixin avec des styles commons pour un élément d'un filtre et enum set
@mixin filterEnumSetElement() {
    @include transitions(background-color 0.3s);
    display: block;
    cursor: pointer;
    text-align: center;
    position: relative;
    border-top: 1px solid $lightGray;
    padding: 5px 10px;
    
    &:hover {
        color: $black;
    }
    
    .label-content {
        @include inbl();
        max-width: 80%;
        
        .thumbnail {
            margin-bottom: 3px;
            text-align: center;

            img {
                max-width: 100px;
            }
        }

        .legend {
            text-align: center;
            font-size: 90%;
            word-break: break-all;
        }
    }
    
    .label-count {
        @include inbl();
        height: 16px;
        min-width: 16px;
        padding: 0 3px;
        text-align: center;
        border-radius: 5px;
        background-color: $midGray;
        line-height: 16px;
        color: $white;
        margin-left: 10px;
        font-size: 80%;
    }
}

// loadMore
// mixin avec les styles pour le bouton loadMore utilisé dans les champs de relation enumSet
@mixin loadMore() {
    @include transitions(color 0.3s);
    text-align: center;
    padding: 5px;
    cursor: pointer;
    background-color: $gray;
    font-weight: bold;

    &:hover {
        background-color: $darkGray;
        color: $white;
    }

    &[data-status='loading'] {
        background-position: center;
        background-color: $white;

        .text {
            visibility: hidden;
        }
    }
}