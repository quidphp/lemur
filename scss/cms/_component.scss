// compileOnSave: false

/*
 * This file is part of the QuidPHP package.
 * Website: https://quidphp.com
 * License: https://github.com/quidphp/lemur/blob/master/LICENSE
 */

// component
// stylesheet containing various CMS component mixins

// modal
// mixin avec les styles de base pour le modal
@mixin modal() {
    .modal {
        @include fixed(0, '', '', 0);
        @include wh(100%);
        z-index: 999;
        display: none;

        &[data-status='loading'] .inner {
            background-position: center;
        }

        > .background {
            height: 100%;
            background-color: rgba(0, 0, 0, 0.3);
        }
    }
    .modal .outer {
        @include abs(20%, '', '', 20%);
        @include wh(60%);

        > .box {
            height: 100%;
            background-color: $white;
            position: relative;

            > .close {
                z-index: 10;
            }

            > .inner {
                height: 100%;
            }
        }
    }
}

// basePopup
// mixin avec les styles de base pour un popup
@mixin basePopup() {
    .top-right .popup {
        left: auto;
        right: 0;
    }
    .bottom-left .popup {
        top: auto;
        bottom: 100%;
    }
    .bottom-right .popup {
        top: auto;
        left: auto;
        right: 0;
        bottom: 100%;
    }
    .popup {
        @include abs(100%, '', '', 0px);
        display: none;
    }
}

// clickOpen
// mixin avec quelques styles de base pour un widget clickOpen
// le trigger ouvre le clickOpen, un click sur le body le ferme
@mixin clickOpen() {
    @include inbl();
    position: relative;
    min-width: 150px;

    &.invalid {
        > .trigger {
            background-color: $red;
            color: $white;
            border: 1px solid $red;
        }
    }

    > .trigger {
        @include transitions(background-color 0.3s, color 0.3s);
        position: relative;
        padding: 5px 40px 5px 12px;
        cursor: pointer;
        background-color: $white;
        border: 1px solid $lightestGray;
        border-radius: 5px;

        > .title {
            text-align: left;
            font-size: 90%;
        }

        > .ico {
            @include abs(50%, 10px);
            @include wh(12px, true, '', true);
            background-size: contain;
        }
    }

    &.active > .trigger,
    > .trigger:hover {
        color: $black !important;
        background-color: $lightYellow !important;
    }

    &.active > .popup {
        display: block;
    }

    > .popup {
        width: 100%;
        display: none;
        text-align: left;
        max-height: 250px;
        overflow-y: auto;
        z-index: 100;
        border-radius: 5px;
    }

    &.top-right > .popup,
    &.top-left > .popup {
        border-top: 0;
    }
}

// specificNav
// styles utilisés pour la navigation de la page spécifique
@mixin specificNav() {
    @include inbl();
    background-color: $lightestGray;
    border: 1px solid $lightGray;
    padding: 5px 10px;
    border-radius: 5px;
    box-shadow: 2px 2px 6px -4px $gray;

    > a {
        @include inbl();
        color: $black;
        font-weight: bold;
        margin: 0 8px;
        font-size: 90%;

        &:hover {
            color: $darkGray;
        }
    }

    > .count {
        @include inbl();
        position: relative;
        padding: 0px 8px;

        > span.count {
            font-size: 90%;
        }
    }
}

// inputChoice
// style utilisé pour faire un choix parmis plusieurs input radio ou checkbox
@mixin inputChoice($padding: 8px 10px) {
    padding: 5px 0;

    .choice-in {
        @include inbl();
        line-height: 1;

        input[type='radio'] + label,
        input[type='checkbox'] + label,
        input[type='radio']:checked + label,
        input[type='checkbox']:checked + label {
            @include transitions(box-shadow 0.3s, background-color 0.3s, border 0.3s);
            @include inbl();
            padding: $padding;
            cursor: pointer;
            background-color: $lighterGray;
            border: 1px solid $lightGray;
            border-radius: 5px;
            box-shadow: 2px 2px 6px -4px $lightGray;

            &:hover {
                color: $black;
                border: 1px solid $gray;
                background-color: $lightYellow;
                box-shadow: 2px 2px 6px -4px $gray;
            }

            &:active {
                border: 1px solid $darkColor;
            }
        }

        input[type='radio']:checked + label,
        input[type='checkbox']:checked + label {
            background-color: $white;
            box-shadow: 2px 2px 6px -4px $black;
        }
    }
}

// tableForm
// mixin avec les styles pour un formulaire dans une table, comme la page de connexion
@mixin tableForm($color, $labelHover) {
    label {
        color: $color;

        &[for]:hover {
            color: $labelHover;
        }
    }

    .required label:before {
        content: '* ';
    }

    textarea,
    select,
    input[type='text'],
    input[type='email'],
    input[type='password'] {
        display: block;
        width: 100%;
    }

    textarea {
        height: 100px;
    }

    .choice {
        @include inputChoice();
    }

    .table {
        width: 100%;

        .table-cell {
            padding: 10px 0 5px;

            &.label-cell {
                padding-right: 10px;
            }
        }

        .table-cell:first-child {
            width: 40%;
        }
    }
}

// addRemove
// contient les styles de base pour la composante jsonArray
// un champ complexe où l'on peut ajouté, déplacer ou supprimer des lignes
@mixin addRemove() {
    .right .container {
        position: relative;

        > .ele {
            position: relative;
            margin-bottom: 10px;

            > .current {
                @include inbl();
                width: 85%;
            }

            > .utils {
                @include inbl();
                width: 15%;
                padding-left: 10px;
                text-align: right;

                > .outer {
                    @include inbl();
                    background-color: $lightGray;
                    padding: 5px 10px;
                    border-radius: 3px;
                    text-align: center;

                    > .icon {
                        margin-left: 10px;

                        &:first-child {
                            margin-left: 0;
                        }
                    }
                }
            }
        }
    }

    .right .insert {
        @include transitions(background-color 0.3s);
        padding: 5px;
        text-align: center;
        background-color: $lightGray;
        cursor: pointer;
        border-radius: 3px;

        > span {
            @include inbl();
            font-weight: bold;

            &.icon {
                margin-left: 10px;
            }
        }

        &:hover {
            background-color: $gray;
        }
    }
}

// addRemoveResponsive
// règle pour les champs addRemove pour response
@mixin addRemoveResponsive() {
    .container > .ele {
        .current {
            width: auto;
            display: block;
        }

        .utils {
            padding-top: 5px;
            width: auto;
            display: block;
        }
    }
}

// icon
// mixin pour gérer un icon
@mixin icon() {
    background-position: 50% 50%;
    background-repeat: no-repeat;
    background-size: 16px 16px;
}

// iconSolo
// mixin pour générer un icon seul, possible d'activer hover
@mixin iconSolo($hover: true) {
    @include icon();
    @include inbl();
    @include transitions(opacity 0.3s);
    @include wh(16px);
    cursor: pointer;

    @if ($hover != false) {
        &:hover {
            opacity: 0.8;
        }
    }
}

// iconLeft
// mixin pour générer un icon à gauche, par exemple du texte d'un bouton
@mixin iconLeft() {
    @include icon();
    background-position: 5px 50%;
    padding-left: 25px;
}

// iconCenter
// mixin pour générer un icon centré
@mixin iconCenter() {
    @include icon();
    @include abs(50%, '', '', 50%);
    margin-left: -8px;
    margin-top: -8px;
}

// emptyPlaceholder
// mixin pour le style de empty placeholder
@mixin emptyPlaceholder() {
    font-style: italic;
    color: $darkGray;
}

// wysiwyg
// mixin avec quelques styles pour un bloc de style article
// peut être utilisé pour afficher du contenu provenant d'un éditeur WYSIWYG
@mixin wysiwyg() {
    ul {
        @include ulOlMargin();

        > li {
            padding: 2px 0;
        }
    }

    a {
        color: $color;

        &:hover {
            color: $darkGray;
        }
    }
}

// nothing
// style pour le texte Rien à afficher
@mixin nothing($center: '') {
    display: block;
    font-weight: bold;

    @if ($center != '') {
        text-align: center;
    }
}

// ulOlMargin
// margin utilisé pour les ul/ol
@mixin ulOlMargin() {
    margin-left: 1.7rem;
}

// panelButton
// mixin pour les styles des boutons de panneaux
@mixin panelButton() {
    @include inbl();
    padding: 5px 15px;
    margin: 0 5px 5px 0;
    background-color: $gray;
    border: 1px solid $lightGray;
    border-radius: 5px;
    text-transform: uppercase;
    cursor: pointer;
    @include transitions(color 0.3s, background-color 0.3s, border 0.3s);

    &:hover,
    &.selected {
        background-color: $color;
        border: 1px solid $darkColor;
        color: $white;
    }

    &:active {
        background-color: $black;
        border: 1px solid $color;
    }
}

// calendar
// règle de style pour le calendrier
@mixin calendar() {
    .head {
        padding: 5px;
        background-color: $darkColor;
        position: relative;

        .prev,
        .next {
            @include wh(16px, true, '', true);

            &.prev {
                @include abs(50%, '', '', 5px);
            }

            &.next {
                @include abs(50%, 5px);
            }
        }

        .current {
            text-align: center;
            font-size: 110%;
            color: $white;
        }
    }
    .body {
        table {
            width: 100%;
            border-collapse: collapse;
        }

        thead {
            background-color: $color;

            th {
                padding: 3px;
                color: $white;
                text-align: center;
                font-weight: bold;
            }
        }

        tbody {
            td {
                padding: 3px;
                text-align: center;
                color: $black;
                border: 1px solid $lightGray;
                cursor: pointer;

                &.out {
                    color: $lightGray;
                }

                &.today {
                    background-color: $lightGray;
                }

                &:hover {
                    background-color: $lightYellow;
                }

                &.selected {
                    background-color: $lightYellow !important;
                }
            }
        }
    }
}
