// compileOnSave: false

/*
 * This file is part of the QuidPHP package.
 * Website: https://quidphp.com
 * License: https://github.com/quidphp/lemur/blob/master/LICENSE
 */

// style
// stylesheet containing the root styling rules as well as common classes for the CMS

/* INIT */
@include reset();
@include default();
@include jqueryUi();
@include modal();
@include clickOpen();

/* HTML */
body {
    font-size: 1.4rem;
    font-weight: 300;
    line-height: 1.5;
    @include scrollbar();
}

/* TITRE */
h1 {
    font-size: 2.2rem;
    font-weight: 600;
}
h2 {
    font-size: 1.8rem;
    font-weight: 600;
}
h3 {
    font-size: 1.4rem;
    font-weight: 600;
}

/* FORM */
input[type='text'],
input[type='password'],
input[type='email'],
textarea {
    @include inputTextBase();

    &::-webkit-input-placeholder {
        color: $darkGray;
    }

    &::-moz-placeholder {
        color: $darkGray;
    }

    &::-ms-input-placeholder {
        olor: $darkGray;
    }
}
input[type='radio'],
input[type='checkbox'] {
    display: none;
}
input[type='radio'] + label,
input[type='checkbox'] + label {
    padding-left: 22px;
    background-size: 14px 14px;
    background-position: 0% 50%;
}
input[type='radio'] + label {
    @include bgimg64($iconRadioInactive);
}
input[type='checkbox'] + label {
    @include bgimg64($iconCheckboxInactive);
}
input[type='radio']:checked + label {
    @include bgimg64($iconRadioActive);
}
input[type='checkbox']:checked + label {
    @include bgimg64($iconCheckboxActive);
}
label[for]:hover {
    color: $darkGray;
}
button[type='submit'] {
    @include button();
}
button[type='button'] {
    line-height: 1.5;
}
body a.with-icon,
body button.with-icon,
body input[type='submit'].with-icon,
body .trigger.with-icon {
    @include button();
    @include iconLeft();
}

/* ICON */
body .icon-solo {
    @include iconSolo();

    &.center {
        @include abs(50%, null, null, 50%);
        margin-left: -8px;
        margin-top: -8px;
    }
}

/* LOADING */
body .loading-icon,
body [data-status='loading'] .popup,
body [data-status='loading'].popup,
.load-more[data-status='loading'],
.modal[data-status='loading'] .inner,
td[data-quick-edit='1'][data-status='loading'] > .cell-inner > a.quick-edit {
    @include bgimg64($iconLoading, center);
    background-size: 16px 16px;
}

/* CLOSE */
body.responsive-menu-open header > .top .burger-menu,
body .icon-solo.close {
    @include bgimg64($iconClose);
}

/* OPACITY */
body .icon-solo.search,
html body .icon-solo.move {
    &:hover,
    &[data-triggered='1'] {
        opacity: 0.6;
    }
}

/* MEDIA */
[data-route='general'] main table td[data-group='media'] .media-placeholder,
form [data-group='media'] .right .block .info .media-placeholder,
form [data-table-relation='1'] .right .table-relation .popup .big-icon.storage {
    @include bgimg64($iconMedia);
}

/* VIDEO */
form [data-table-relation='1'] .right .table-relation .popup .big-icon.video {
    @include bgimg64($iconVideo);
}

/* INFO */
body .icon-solo.info,
body .popup-trigger.with-icon .popup-title,
body .popup-trigger.with-icon-solo .popup-title {
    @include bgimg64($iconInfo);
}

/* MOVE */
html body .icon-solo.move {
    @include bgimg64($iconMove);
    cursor: move;
}

/* ICON */
body .icon-solo,
body .with-icon {
    &.account {
        @include bgimg64($iconAccount);
    }
    &.add {
        @include bgimg64($iconAdd);
    }
    &.burger {
        @include bgimg64($iconBurger);
    }
    &.check {
        @include bgimg64($iconCheck);
    }
    &.cli {
        @include bgimg64($iconCli);
    }
    &.cols {
        @include bgimg64($iconCols);
    }
    &.copy {
        @include bgimg64($iconCopy);
    }
    &.download {
        @include bgimg64($iconDownload);
    }
    &.email {
        @include bgimg64($iconEmail);
    }
    &.filter {
        @include bgimg64($iconFilter);
    }
    &.help {
        @include bgimg64($iconHelp);
    }
    &.lang {
        @include bgimg64($iconLang);
    }
    &.link {
        @include bgimg64($iconLink);
    }
    &.login,
    &.logout {
        @include bgimg64($iconLogin);
    }
    &.mask {
        @include bgimg64($iconMask);
    }
    &.minus {
        @include bgimg64($iconMinus);
    }
    &.modify {
        @include bgimg64($iconModify);
    }
    &.module {
        @include bgimg64($iconModule);
    }
    &.password {
        @include bgimg64($iconPassword);
    }
    &.plus {
        @include bgimg64($iconPlus);
    }
    &.remove,
    &.multi-delete,
    &.truncate {
        @include bgimg64($iconRemove);
    }
    &.reset,
    &.regenerate {
        @include bgimg64($iconReset);
    }
    &.search {
        @include bgimg64($iconSearch);
    }
    &.uncheck {
        @include bgimg64($iconUncheck);
    }
    &.view {
        @include bgimg64($iconView);
    }
}

/* COMPONENT */
[data-absolute-placeholder] {
    position: relative;
}
.fakeselect {
    @include fakeselect();
}
.popup-trigger {
    @include popupTrigger();
}
.specific-component {
    @include specificComponent();
}

// primary
#wrapper [data-cell='primary'] .general-component {
    @include componentPrimaryGeneral();
}

// date
#wrapper [data-group='date'] .specific-component {
    @include componentDateSpecific();
}

// relation
#wrapper [data-group='relation'][data-tag='search'] .specific-component {
    @include componentEnumSetSpecific();
}
#wrapper [data-group='relation'][data-sortable='1'] .specific-component {
    @include componentRelationSortableSpecific();
}
#wrapper [data-group='relation'][data-tag='select'] .specific-component {
    @include componentSelectSpecific();
}
#wrapper [data-group='relation'] .general-component {
    @include componentRelationGeneral();
}
#wrapper [data-group='relation'][data-relation-table='media'] .general-component {
    @include componentRelationMediaGeneral();
}

// files
#wrapper [data-group='media'] .specific-component {
    @include componentFilesSpecific();
}
#wrapper [data-group='media'] .general-component {
    @include componentFilesGeneral();
}

// addRemove
#wrapper [data-tag='add-remove'] .specific-component {
    @include componentAddRemoveSpecific();
}

// tableRelation
#wrapper [data-table-relation='1'] .specific-component {
    @include componentTableRelationSpecific();
}

/* userPassword */
#wrapper [data-col='userPassword'] .specific-component {
    @include componentUserPasswordSpecific();
}

// video
#wrapper [data-group='video'] .specific-component {
    @include componentVideoSpecific();
}

// tinymce
#wrapper [data-group='tinymce'] .specific-component {
    @include componentTinymceSpecific();
}
