// compileOnSave: false

/*
 * This file is part of the QuidPHP package.
 * Website: https://quidphp.com
 * License: https://github.com/quidphp/lemur/blob/master/LICENSE
 */

// filter
// stylesheet for the filter component

// filterTogglerOuter
// mixin pour le toggler du filter dans general
@mixin filterTogglerOuter() {
    @include transition(background-color);
    height: 100%;

    &:hover,
    &.filtering,
    &.active {
        background-color: $darkerColor;
    }

    .close {
        @include abs(-8px, -8px);
    }

    .trigger {
        height: 100%;

        .filter {
            @include abs(50%, null, null, 50%);
            @include transition(opacity);
            margin-top: -7px;
            margin-left: -8px;
            background-position: 0px 0px;
            display: block;
        }
    }

    > .popup {
        @include filterPopup();
    }
}

// filterPopupTop
// mixin pour la partie supérieure du popup filter avec search et order
@mixin filterPopupTop() {
    padding: 10px;
    display: block;

    input[type='text'] {
        width: 100%;
    }

    .spacing {
        height: 5px;
    }

    .order {
        text-align: center;
    }
}

// filterPopupBase
// mixin avec des styles commons pour le popup d'un filtre et enum set
@mixin filterPopupBase() {
    width: 350px;
    max-width: 350px;
    max-height: 300px;
    cursor: default;
    font-weight: 300;

    .fakeselect .popup {
        top: 100% !important;
        left: 0 !important;
        right: auto;
        bottom: auto;
    }

    h3 {
        padding: 5px;
        text-align: center;
    }

    .results {
        display: block;

        ul {
            list-style-type: none;
            text-indent: 0;
            padding: 0;

            li {
                position: relative;
                padding: 0px;

                &.load-more {
                    @include loadMore();
                }
            }
        }
    }
}

// filterPopup
// mixin avec des styles pour le popup d'un filtre
@mixin filterPopup() {
    @include filterPopupBase();

    .top {
        @include filterPopupTop();
    }

    .results ul {
        &.selected-list {
            border-bottom: 4px solid $lightGray;
        }

        li {
            &:first-child > .replace {
                border-top: 0;
            }

            &.has-icon > .replace {
                padding-right: 30px;
            }

            &.has-icon .icon-solo {
                @include iconSolo();
            }

            > a.replace {
                @include filterElementBase();

                &:hover,
                &.clicked {
                    color: $black;
                    background-color: $lightYellow;
                }

                &.selected {
                    background-color: $lightYellow;
                }
            }

            a.icon-solo {
                @include abs(50%, 5px);
                @include wh(16px, true, null, true);

                &:hover,
                &.clicked {
                    opacity: 0.5;
                }
            }
        }
    }
}

// filterElementBase
// mixin avec des styles commons pour un élément d'un filtre et enum set
@mixin filterElementBase() {
    @include transitions(background-color 0.3s);
    @include flex(center);
    cursor: pointer;
    text-align: center;
    position: relative;
    border-top: 1px solid $lightGray;
    padding: 5px 10px;

    .label-content {
        max-width: 80%;

        .thumbnail {
            margin-bottom: 3px;
            text-align: center;

            img {
                max-width: 100px;
            }
        }

        .legend {
            text-align: center;
            font-size: 90%;
            word-break: break-all;
        }
    }

    .label-count {
        height: 16px;
        min-width: 16px;
        padding: 0 3px;
        text-align: center;
        border-radius: 5px;
        background-color: $midGray;
        line-height: 16px;
        color: $white;
        margin-left: 10px;
        font-size: 80%;
    }
}

// loadMore
// mixin avec les styles pour le bouton loadMore utilisé dans les champs de relation enumSet
@mixin loadMore() {
    @include transitions(color 0.3s);
    text-align: center;
    padding: 5px;
    cursor: pointer;
    background-color: $gray;
    font-weight: bold;

    &:hover,
    &.clicked {
        background-color: $darkGray;
        color: $white;
    }

    &[data-status='loading'] {
        background-position: center;
        background-color: $white;

        .text {
            visibility: hidden;
        }
    }
}
